{"version":3,"sources":["Components/Card-List/card/card.component.jsx","Components/Card-List/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","elem","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"mTAIaA,eAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAM,UAAUC,IAAG,wBAAAC,OAA4BP,EAAMQ,QAAQC,GAA1C,4BACxBR,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQE,KAApB,KACAT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCJbC,SAAW,SAACZ,GACzB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACvBJ,EAAMa,SAASC,IAAI,SAAAC,GAAI,OAAKd,EAAAC,EAAAC,cAACa,EAAD,CAAMC,IAAMF,EAAKN,GAAID,QAAWO,SCFhDG,SAAY,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAaC,EAAfF,EAAeE,aAAf,OACrBpB,EAAAC,EAAAC,cAAA,SACAmB,KAAO,SACPlB,UAAY,SACZgB,YAAeA,EACfG,SAAYF,MC0CDG,cAxCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAUFP,aAAe,SAACW,GAChBP,EAAKQ,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SATnCX,EAAKY,MAAQ,CACXxB,SAAU,GACVqB,YAAa,IALHT,mFAeM,IAAAa,EAAAV,KAClBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAU,CAAEpB,SAAU8B,uCAInC,IAAAC,EACyBhB,KAAKS,MAA9BxB,EADA+B,EACA/B,SAAUqB,EADVU,EACUV,YACXW,EAAmBhC,EAASiC,OAAO,SAAAtC,GAAO,OAAIA,EAAQE,KAAKqC,cAAcC,SAASd,EAAYa,iBACpG,OACM9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC8C,EAAD,CACA7B,YAAc,kBACdC,aAAgBO,KAAKP,eAErBpB,EAAAC,EAAAC,cAAC+C,EAAD,CAAUrC,SAAYgC,YAlChBM,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAArB,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.9268984b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'>\r\n        <img alt = 'monster' src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport {Card} from \"./card/card.component.jsx\";\r\nimport \"./card-list.style.css\";\r\n\r\nexport const CardList = (props) => {\r\nreturn <div className = \"cardList\">            \r\n{props.monsters.map(elem => (<Card key= {elem.id} monster = {elem}/>))}\r\n</div>\r\n}\r\n","import React from \"react\";\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n    type = \"search\" \r\n    className = 'search'\r\n    placeholder = {placeholder} \r\n    onChange = {handleChange} \r\n    /> \r\n)","// import logo from './logo.svg';\n import './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from \"./Components/Card-List/card-list.component.jsx\";\nimport { SearchBox } from './Components/search-box/search-box.component';\n\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = { \n      monsters: [],\n      searchField: \"\"\n    };\n\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange = (e) => {\n  this.setState({searchField: e.target.value})\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState( { monsters: users } ));\n  }\n\n\n  render() {\n    const {monsters, searchField} = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n          <div className=\"App\">\n            <h1>Monsters Rolodex</h1>\n            <SearchBox \n            placeholder = \"search monsters\" \n            handleChange = {this.handleChange}\n            /> \n            <CardList monsters = {filteredMonsters}/>\n          </div>\n        );\n      }\n  } \n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}